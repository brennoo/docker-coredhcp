name: Build and Push Docker Image

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      commit_hash: ${{ steps.get_commit_hash.outputs.commit_hash }}

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3
        id: checkout_self

      - name: Checkout upstream repository
        id: checkout_upstream
        run: git clone https://github.com/coredhcp/coredhcp.git

      - name: Get commit hash
        id: get_commit_hash
        run: |
          cd coredhcp
          UPSTREAM_COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "commit_hash=$UPSTREAM_COMMIT_HASH" >> $GITHUB_ENV
          echo "::set-output name=commit_hash::$UPSTREAM_COMMIT_HASH"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image or just build
        run: |
          TARGET_IMAGE=brennoo/coredhcp
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
            echo "Building and pushing to Docker Hub..."
            docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 --push -t $TARGET_IMAGE:${{ steps.get_commit_hash.outputs.commit_hash }} -t $TARGET_IMAGE:latest .
          else
            echo "Building the Docker image without pushing..."
            docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 -t $TARGET_IMAGE:${{ steps.get_commit_hash.outputs.commit_hash }} --load .
          fi
