name: Build and Push Docker Image

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      commit_hash: ${{ steps.get_commit_hash.outputs.commit_hash }}

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3
        id: checkout_self

      - name: Checkout upstream repository
        id: checkout_upstream
        run: git clone https://github.com/coredhcp/coredhcp.git

      - name: Get commit hash
        id: get_commit_hash
        run: |
          cd coredhcp
          UPSTREAM_COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "commit_hash=$UPSTREAM_COMMIT_HASH" >> $GITHUB_ENV
          echo "::set-output name=commit_hash::$UPSTREAM_COMMIT_HASH"
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: brennoo/coredhcp:${{ steps.get_commit_hash.outputs.commit_hash }}
          outputs: type=docker,dest=/tmp/coredhcp_image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: coredhcp_image
          path: /tmp/coredhcp_image.tar

  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: coredhcp_image
          path: /tmp

      - name: Load, tag, and push Docker image
        run: |
          docker load --input /tmp/coredhcp_image.tar
          IMAGE_TAG=brennoo/coredhcp:${{ needs.build.outputs.commit_hash }}
          docker tag brennoo/coredhcp:${{ needs.build.outputs.commit_hash }} $IMAGE_TAG
          docker tag $IMAGE_TAG brennoo/coredhcp:latest
          echo "Pushing Docker image with tag $IMAGE_TAG"
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push $IMAGE_TAG
          docker push brennoo/coredhcp:latest
